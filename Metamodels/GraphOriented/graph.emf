@namespace(uri="graph", prefix="")
package graph;

class Database {
    attr String[1] name; 
    val Element[*] elements;
	val Role[*] roles; 
	val User[*] users; 
	val SecurityRule[*] rules;
	}
	
	
abstract class Element {
    attr String[1] name; 
    val Field[*] #element fields;
    }
    
class Node extends Element {}

class Relationship extends Element {
	ref Node[1] from; 
	ref Node[1] to;
	}

class Field {
    attr String[1] name; 
    val DataType[1] dataType;
    attr boolean[?] isRequired = true;
    attr boolean[?] isIndex = false; 
    ref Element[1] #fields element;
    }
    
class Role {
    attr String[1] name;
    val Role[*] #root children;
    ref Role[?] #children root;
    ref SecurityRule[*] #roles rules;
    }
    
class User {
    attr String[1] name; 
    attr String[1] pass; 
    ref Role[*] roles;
    }
    
abstract class SecurityRule{
	attr String[1] name; 
	ref Role[+] #rules roles;
	val Sign[1] sign; 
    val Privilege[+] privileges; 
    }
    
class SecurityRuleField extends SecurityRule {
	ref Field[+] fields;
	}
	
class SecurityRuleElement extends SecurityRule {
	ref Element[+] elements;
	}

abstract class Privilege {
	attr String[?] condition; 
	ref SecurityAction[?] securityAction;
	}
class Create extends Privilege {}
class Read extends Privilege {}
class Update extends Privilege {}
class Delete extends Privilege {}

abstract class SecurityAction {}
class HideInstance extends SecurityAction {}
class HideValue extends SecurityAction {}
class HideAllValues extends SecurityAction {}
class HideField extends SecurityAction {}

abstract class Sign {}
class possitive extends Sign {}
class negative extends Sign {}

abstract class DataType {}
class int extends DataType {}
class double extends DataType {}
class bool extends DataType {}
class char extends DataType {}
class string extends DataType {}
class date extends DataType {}
class array extends DataType {}
